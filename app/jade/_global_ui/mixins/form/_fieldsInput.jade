//- generic field for textarea and text input field
mixin fieldInputTag(form, field)
  input(  type=field.type,
          name=field.id,
          id=field.id
          placeholder=field.placeholder,
          class='input-#{field.id} #{form.inputsClass} #{field.inputsClass}',
          ng-model=field.ngModelField,
          ng-model-options=field.ngModelOptions,
          ng-minlength=field.ngMinlength,
          ng-maxlength=field.ngMaxlength,
          ng-bind=field.id,
          ng-show=field.ngShow,
          required=field.required,
          ng-change=field.ngChange,
          translate,
          ng-disabled=ngDisabled,
          disabled=field.disabled)&attributes(field.customAttributes)

//- Generic input field (types text, password, email...)
mixin fieldInput(formId, fieldId, stateId)
  - var field = util.setFieldDefaults(formId, fieldId, stateId);
  - var form = util.setFormDefaults(formId, stateId);
  - // The ng Model is automatically set if not defined
  - // and the attribute can be removed entirely if set to false (for fields that are read only (password Confirm...))
  - field.ngModelField = util.setDefaultNgModel(field, form);
  - field.ngModelFieldRepeater = util.setNgModel(field, form);
  - field.customAttributes = field.customAttributes ||Â {};
  +fieldGroup(field)
    +fieldInputTag(form, field)
