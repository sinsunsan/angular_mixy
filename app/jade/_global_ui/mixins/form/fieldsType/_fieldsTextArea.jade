
mixin fieldTextareaTag(form, field)
  textarea(
    name=field.id,
    placeholder=field.placeholder,
    class='input-#{field.id} #{form.inputsClass} #{field.inputsClass}',
    ng-model=field.ngModelField,
    ng-model-options=field.ngModelOptions,
    rows="3",
    cols="30",
    ng-bind=field.id,
    required=field.required,
    ng-change=field.ngChange,
    ng-required=field.ngRequired,
    ng-minlength=field.ngMinlength,
    ng-maxlength=field.ngMaxlength,
    ng-pattern= field.ngPattern,
    translate,
    disabled=field.disabled
    )&attributes(field.customAttributes)

//- Special field to add a field
mixin fieldAddField(form, field)
  if (field.multipleAddField)
    - var addField = field.multipleAddField;
    - var addFieldNgModel = form.ngModel + '.' + field.ngModel + 'New';
    - // We add 'create' argument to the ng-change function
    div(class="add-field")
      if (field.type === 'textarea')
        textarea(
          value="champs pour ajouter d'autre champs",
          ng-model=addFieldNgModel,
          ng-model-options=field.ngModelOptions,
          ng-change!=addField.ngChange,
          ng-minlength=field.ngMinlength,
          ng-maxlength=field.ngMaxlength,
          class=addField.class,
          placeholder=addField.placeholder
        )
      if (field.type === 'text')
        input(
          type="text",
          value="champs pour ajouter d'autre champs",
          ng-model=addFieldNgModel,
          ng-model-options=field.ngModelOptions,
          ng-change=addField.ngChange,
          ng-minlength=field.ngMinlength,
          ng-maxlength=field.ngMaxlength,
          class=addField.class,
          placeholder=addField.placeholder
        )

mixin fieldTextAreaTagWrapper(form, field)
  if (field.multiple)
    div(ng-repeat="item in #{field.ngModelFieldRepeater} track by $index")
      div(class="multiple-field multiple-field-#{i}")
        //- The ngModel if computed in the the set setDefaultNgModel() function
        - if ((typeof(field.ngChange) !== 'undefined') && _.isString(field.ngChange)) { field.ngChange = field.ngChange.substring(0, field.ngChange.length - 1) + ", { action: 'update', subFieldIndex: $index } )"}
        +fieldTextareaTag(form, field)
    if (field.multipleAddField)
      div(class="add-field-wrapper")
        +fieldAddField(form, field)
  else
    +fieldTextareaTag(form, field)

//- Generic textearea field
mixin fieldTextarea(formId, fieldId, stateId)
  - var field = util.setFieldDefaults(formId, fieldId, stateId);
  - var form = util.setFormDefaults(formId, stateId);
  - // The ng Model is automatically set if not defined
  - // and the attribute can be removed entirely if set to false (for fields that are read only (password Confirm...))
  - field.ngModelField = util.setDefaultNgModel(field, form);
  - field.ngModelFieldRepeater = util.setNgModel(field, form);
  - field.customAttributes = field.customAttributes || {};
  +fieldGroup(field)
    //- a field label
    if field.label && field.label.display
      +fieldPre(field)
      +fieldMain(field)
        +fieldTextAreaTagWrapper(form, field)
    else
      +fieldTextAreaTagWrapper(form, field)