# Globale Form settings
forms:
  defaults:
    #
    # Default fields settings
    # Is overriden by profiles.fields.fieldName.properties if set
    # Errors key trigger the html code in the jade mixin
    #
    # Default form value, that is used if no formId is found
    # for the given form being outputed with formWrapper mixin
    form:
      id: "" # Required
      title: "" # Visible title that show at the top of the form
      wrapperClass: "form-horizontal" # css classes to the div wrapper outside of the form tag
      ngSubmit: "" # function that is triggered when the form is submitted
      # Fields overrides
      # An object of all field whose default value should be overriden
      errors:
        ngBind: "forms.errors"
      css:
        formErrors: "mb1 text-center"
        inputsClass: "form-control"
        submitBtn: "btn-block btn btn-default btn-success"
        fieldGroup: "mb1"
        commonClass: "form-control mb1"
      ngModel: 'modal.item'
      ngSubmit: 'modal.fn.submit'
      modal:
        size: 'sm'
    # Default universal field settings
    field:
      ngClick: false
      # label are useful to identify the field name when the placeholder is hidden
      # when some datas has been filled
      label:
        display: false # is there a label at the left of the field
        size: "col-xs-3" # css class for the labels
        position: "left" # The position of the label relative to the field
      inputsClass: "input-lg form-control"
      buttonsClass: "btn-lg"
      css:
        group: "mb1"

  # Define the custom errors messages
  errors:
    # api validation overrides
    email_not_unique: 'This email is already used.'
    # Front end validation errors
    required: 'This field is required.'
    valid: 'This field is not valid.'
    minlength: "This field is too short."
    maxlength: "The field is too long."
    # email is a strandard $validator or input[type="email"] fields
    email: "This email is not valid."
